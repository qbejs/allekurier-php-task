<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="EventsCollectorTrait.php" path="/Common/EventManager">
    <totals>
      <lines total="48" comments="12" code="36" executable="7" executed="5" percent="71.43"/>
      <methods count="4" tested="3" percent="75.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="0" tested="0" percent="0"/>
      <traits count="1" tested="0" percent="0.00"/>
    </totals>
    <trait name="App\Common\EventManager\EventsCollectorTrait" start="7" executable="7" executed="5" crap="5.58">
      <namespace name="App\Common\EventManager"/>
      <method name="record" signature="record(App\Common\EventManager\EventInterface $event): void" start="14" end="17" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="recordMulti" signature="recordMulti(array $events): void" start="22" end="27" crap="6" executable="2" executed="0" coverage="0"/>
      <method name="getEvents" signature="getEvents(): array" start="32" end="35" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="pullEvents" signature="pullEvents(): array" start="40" end="46" crap="1" executable="3" executed="3" coverage="100"/>
    </trait>
    <coverage>
      <line nr="16">
        <covered by="Tests\Unit\Core\Invoice\Application\Command\CreateInvoice\CreateInvoiceHandlerTest::testShouldCreateInvoiceForActiveUser"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCreateInvoiceWithValidAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldThrowExceptionForInvalidAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldThrowExceptionForNegativeAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCancelInvoice"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldSetId"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldPullEvents"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCreateInvoiceWithLargeAmount"/>
        <covered by="Tests\Unit\Core\User\Application\Command\CreateUser\CreateUserHandlerTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Application\Command\CreateUser\CreateUserHandlerTest::testShouldCreateUserWithDifferentEmail"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithActiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldActivateUser"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldDeactivateUser"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldPullEvents"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldSetId"/>
      </line>
      <line nr="34">
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCreateInvoiceWithValidAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCancelInvoice"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldPullEvents"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldPullEvents"/>
      </line>
      <line nr="42">
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCreateInvoiceWithValidAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCancelInvoice"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldPullEvents"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldPullEvents"/>
      </line>
      <line nr="43">
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCreateInvoiceWithValidAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCancelInvoice"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldPullEvents"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldPullEvents"/>
      </line>
      <line nr="45">
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCreateInvoiceWithValidAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCancelInvoice"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldPullEvents"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldPullEvents"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Common\EventManager</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_TRAIT">trait</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EventsCollectorTrait</token>
      </line>
      <line no="8">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="9">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT">     * @var EventInterface[]</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$events</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13"/>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">record</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">EventInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$event</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">events</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$event</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="18"/>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT">     * @param EventInterface[] $events</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">recordMulti</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$events</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$events</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$event</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">record</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$event</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT">     * @return EventInterface[]</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getEvents</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">events</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="36"/>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT">     * @return EventInterface[]</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">pullEvents</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$events</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEvents</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">events</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44"/>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$events</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="47">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="48"/>
    </source>
  </file>
</phpunit>
