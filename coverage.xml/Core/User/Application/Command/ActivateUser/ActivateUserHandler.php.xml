<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="ActivateUserHandler.php" path="/Core/User/Application/Command/ActivateUser">
    <totals>
      <lines total="27" comments="0" code="27" executable="5" executed="5" percent="100.00"/>
      <methods count="2" tested="2" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Core\User\Application\Command\ActivateUser\ActivateUserHandler" start="10" executable="5" executed="5" crap="2">
      <namespace name="App\Core\User\Application\Command\ActivateUser"/>
      <method name="__construct" signature="__construct(App\Core\User\Domain\Repository\UserRepositoryInterface $userRepository)" start="13" end="16" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="__invoke" signature="__invoke(App\Core\User\Application\Command\ActivateUser\ActivateUserCommand $activateUserCommand): void" start="18" end="25" crap="1" executable="4" executed="4" coverage="100"/>
    </class>
    <coverage>
      <line nr="16">
        <covered by="Tests\Unit\Core\User\Application\Command\ActivateUser\ActivateUserHandlerTest::testShouldActivateUser"/>
        <covered by="Tests\Unit\Core\User\Application\Command\ActivateUser\ActivateUserHandlerTest::testShouldThrowExceptionWhenUserNotFound"/>
        <covered by="Tests\Unit\Core\User\Application\Command\ActivateUser\ActivateUserHandlerTest::testShouldActivateUserWithDifferentEmail"/>
      </line>
      <line nr="20">
        <covered by="Tests\Unit\Core\User\Application\Command\ActivateUser\ActivateUserHandlerTest::testShouldActivateUser"/>
        <covered by="Tests\Unit\Core\User\Application\Command\ActivateUser\ActivateUserHandlerTest::testShouldThrowExceptionWhenUserNotFound"/>
        <covered by="Tests\Unit\Core\User\Application\Command\ActivateUser\ActivateUserHandlerTest::testShouldActivateUserWithDifferentEmail"/>
      </line>
      <line nr="21">
        <covered by="Tests\Unit\Core\User\Application\Command\ActivateUser\ActivateUserHandlerTest::testShouldActivateUser"/>
        <covered by="Tests\Unit\Core\User\Application\Command\ActivateUser\ActivateUserHandlerTest::testShouldActivateUserWithDifferentEmail"/>
      </line>
      <line nr="23">
        <covered by="Tests\Unit\Core\User\Application\Command\ActivateUser\ActivateUserHandlerTest::testShouldActivateUser"/>
        <covered by="Tests\Unit\Core\User\Application\Command\ActivateUser\ActivateUserHandlerTest::testShouldActivateUserWithDifferentEmail"/>
      </line>
      <line nr="24">
        <covered by="Tests\Unit\Core\User\Application\Command\ActivateUser\ActivateUserHandlerTest::testShouldActivateUser"/>
        <covered by="Tests\Unit\Core\User\Application\Command\ActivateUser\ActivateUserHandlerTest::testShouldActivateUserWithDifferentEmail"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Core\User\Application\Command\ActivateUser</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Core\User\Domain\Repository\UserRepositoryInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Messenger\Attribute\AsMessageHandler</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_STRING">AsMessageHandler</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="11">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ActivateUserHandler</token>
      </line>
      <line no="12">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserRepositoryInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$userRepository</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="17"/>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__invoke</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ActivateUserCommand</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$activateUserCommand</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">userRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getByEmail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$activateUserCommand</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">email</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">activate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22"/>
      <line no="23">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">userRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">save</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">userRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">flush</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="26">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="27"/>
    </source>
  </file>
</phpunit>
