<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="SendEmailInvoiceCreatedEventSubscriberListener.php" path="/Core/Invoice/Application/EventListener">
    <totals>
      <lines total="36" comments="0" code="36" executable="9" executed="9" percent="100.00"/>
      <methods count="3" tested="3" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Core\Invoice\Application\EventListener\SendEmailInvoiceCreatedEventSubscriberListener" start="12" executable="9" executed="9" crap="3">
      <namespace name="App\Core\Invoice\Application\EventListener"/>
      <method name="__construct" signature="__construct(App\Core\Invoice\Domain\Notification\NotificationInterface $notification, Symfony\Contracts\Translation\TranslatorInterface $translator)" start="14" end="18" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="send" signature="send(App\Core\Invoice\Domain\Event\InvoiceCreatedEvent $invoiceCreatedEvent): void" start="20" end="27" crap="1" executable="5" executed="5" coverage="100"/>
      <method name="getSubscribedEvents" signature="getSubscribedEvents(): array" start="29" end="34" crap="1" executable="3" executed="3" coverage="100"/>
    </class>
    <coverage>
      <line nr="18">
        <covered by="Tests\Unit\Core\Invoice\Application\EventListener\SendEmailInvoiceCreatedEventSubscriberListenerTest::testShouldSendEmailWhenInvoiceCreated"/>
        <covered by="Tests\Unit\Core\Invoice\Application\EventListener\SendEmailInvoiceCreatedEventSubscriberListenerTest::testShouldSubscribeToInvoiceCreatedEvent"/>
        <covered by="Tests\Unit\Core\Invoice\Application\EventListener\SendEmailInvoiceCreatedEventSubscriberListenerTest::testShouldSendEmailWithDifferentInvoice"/>
      </line>
      <line nr="22">
        <covered by="Tests\Unit\Core\Invoice\Application\EventListener\SendEmailInvoiceCreatedEventSubscriberListenerTest::testShouldSendEmailWhenInvoiceCreated"/>
        <covered by="Tests\Unit\Core\Invoice\Application\EventListener\SendEmailInvoiceCreatedEventSubscriberListenerTest::testShouldSendEmailWithDifferentInvoice"/>
      </line>
      <line nr="23">
        <covered by="Tests\Unit\Core\Invoice\Application\EventListener\SendEmailInvoiceCreatedEventSubscriberListenerTest::testShouldSendEmailWhenInvoiceCreated"/>
        <covered by="Tests\Unit\Core\Invoice\Application\EventListener\SendEmailInvoiceCreatedEventSubscriberListenerTest::testShouldSendEmailWithDifferentInvoice"/>
      </line>
      <line nr="24">
        <covered by="Tests\Unit\Core\Invoice\Application\EventListener\SendEmailInvoiceCreatedEventSubscriberListenerTest::testShouldSendEmailWhenInvoiceCreated"/>
        <covered by="Tests\Unit\Core\Invoice\Application\EventListener\SendEmailInvoiceCreatedEventSubscriberListenerTest::testShouldSendEmailWithDifferentInvoice"/>
      </line>
      <line nr="25">
        <covered by="Tests\Unit\Core\Invoice\Application\EventListener\SendEmailInvoiceCreatedEventSubscriberListenerTest::testShouldSendEmailWhenInvoiceCreated"/>
        <covered by="Tests\Unit\Core\Invoice\Application\EventListener\SendEmailInvoiceCreatedEventSubscriberListenerTest::testShouldSendEmailWithDifferentInvoice"/>
      </line>
      <line nr="32">
        <covered by="Tests\Unit\Core\Invoice\Application\EventListener\SendEmailInvoiceCreatedEventSubscriberListenerTest::testShouldSubscribeToInvoiceCreatedEvent"/>
      </line>
      <line nr="26">
        <covered by="Tests\Unit\Core\Invoice\Application\EventListener\SendEmailInvoiceCreatedEventSubscriberListenerTest::testShouldSendEmailWhenInvoiceCreated"/>
        <covered by="Tests\Unit\Core\Invoice\Application\EventListener\SendEmailInvoiceCreatedEventSubscriberListenerTest::testShouldSendEmailWithDifferentInvoice"/>
      </line>
      <line nr="31">
        <covered by="Tests\Unit\Core\Invoice\Application\EventListener\SendEmailInvoiceCreatedEventSubscriberListenerTest::testShouldSubscribeToInvoiceCreatedEvent"/>
      </line>
      <line nr="33">
        <covered by="Tests\Unit\Core\Invoice\Application\EventListener\SendEmailInvoiceCreatedEventSubscriberListenerTest::testShouldSubscribeToInvoiceCreatedEvent"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Core\Invoice\Application\EventListener</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Core\Invoice\Domain\Event\InvoiceCreatedEvent</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Core\Invoice\Domain\Notification\NotificationInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\EventDispatcher\EventSubscriberInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Contracts\Translation\TranslatorInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11"/>
      <line no="12">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SendEmailInvoiceCreatedEventSubscriberListener</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EventSubscriberInterface</token>
      </line>
      <line no="13">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">NotificationInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$notification</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">TranslatorInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$translator</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="19"/>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">send</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">InvoiceCreatedEvent</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$invoiceCreatedEvent</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">notification</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">sendEmail</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$invoiceCreatedEvent</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">invoice</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEmail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">translator</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">trans</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'emails.invoice_created.subject'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">translator</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">trans</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'emails.invoice_created.body'</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getSubscribedEvents</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">InvoiceCreatedEvent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'send'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="35">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="36"/>
    </source>
  </file>
</phpunit>
