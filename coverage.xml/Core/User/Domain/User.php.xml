<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="User.php" path="/Core/User/Domain">
    <totals>
      <lines total="73" comments="18" code="55" executable="9" executed="9" percent="100.00"/>
      <methods count="6" tested="6" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Core\User\Domain\User" start="16" executable="9" executed="9" crap="6">
      <namespace name="App\Core\User\Domain"/>
      <method name="__construct" signature="__construct(string $email, bool $isActive)" start="39" end="46" crap="1" executable="4" executed="4" coverage="100"/>
      <method name="getId" signature="getId(): ?int" start="48" end="51" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getEmail" signature="getEmail(): string" start="53" end="56" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="isActive" signature="isActive(): bool" start="58" end="61" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="activate" signature="activate(): void" start="63" end="66" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="deactivate" signature="deactivate(): void" start="68" end="71" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="41">
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCreateInvoiceWithValidAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldThrowExceptionForInvalidAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldThrowExceptionForNegativeAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCancelInvoice"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldSetId"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldPullEvents"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCreateInvoiceWithLargeAmount"/>
        <covered by="Tests\Unit\Core\User\Application\Command\CreateUser\CreateUserHandlerTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Application\Command\CreateUser\CreateUserHandlerTest::testShouldCreateUserWithDifferentEmail"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithActiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldActivateUser"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldDeactivateUser"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldPullEvents"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldSetId"/>
      </line>
      <line nr="42">
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCreateInvoiceWithValidAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldThrowExceptionForInvalidAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldThrowExceptionForNegativeAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCancelInvoice"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldSetId"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldPullEvents"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCreateInvoiceWithLargeAmount"/>
        <covered by="Tests\Unit\Core\User\Application\Command\CreateUser\CreateUserHandlerTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Application\Command\CreateUser\CreateUserHandlerTest::testShouldCreateUserWithDifferentEmail"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithActiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldActivateUser"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldDeactivateUser"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldPullEvents"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldSetId"/>
      </line>
      <line nr="43">
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCreateInvoiceWithValidAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldThrowExceptionForInvalidAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldThrowExceptionForNegativeAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCancelInvoice"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldSetId"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldPullEvents"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCreateInvoiceWithLargeAmount"/>
        <covered by="Tests\Unit\Core\User\Application\Command\CreateUser\CreateUserHandlerTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Application\Command\CreateUser\CreateUserHandlerTest::testShouldCreateUserWithDifferentEmail"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithActiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldActivateUser"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldDeactivateUser"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldPullEvents"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldSetId"/>
      </line>
      <line nr="45">
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCreateInvoiceWithValidAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldThrowExceptionForInvalidAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldThrowExceptionForNegativeAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCancelInvoice"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldSetId"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldPullEvents"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCreateInvoiceWithLargeAmount"/>
        <covered by="Tests\Unit\Core\User\Application\Command\CreateUser\CreateUserHandlerTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Application\Command\CreateUser\CreateUserHandlerTest::testShouldCreateUserWithDifferentEmail"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithActiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldActivateUser"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldDeactivateUser"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldPullEvents"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldSetId"/>
      </line>
      <line nr="50">
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithActiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldSetId"/>
      </line>
      <line nr="55">
        <covered by="Tests\Unit\Core\User\Application\Command\CreateUser\CreateUserHandlerTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Application\Command\CreateUser\CreateUserHandlerTest::testShouldCreateUserWithDifferentEmail"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithActiveStatus"/>
      </line>
      <line nr="60">
        <covered by="Tests\Unit\Core\User\Application\Command\CreateUser\CreateUserHandlerTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Application\Command\CreateUser\CreateUserHandlerTest::testShouldCreateUserWithDifferentEmail"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithActiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldActivateUser"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldDeactivateUser"/>
      </line>
      <line nr="65">
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldActivateUser"/>
      </line>
      <line nr="70">
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldDeactivateUser"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Core\User\Domain</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Common\EventManager\EventsCollectorTrait</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Core\User\Domain\Event\UserCreatedEvent</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Doctrine\ORM\Mapping</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ORM</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10"/>
      <line no="11">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> * @ORM\Entity</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT"> * @ORM\Table(name="users")</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="16">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
      </line>
      <line no="17">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EventsCollectorTrait</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19"/>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT">     * @ORM\Id</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="integer", options={"unsigned"=true}, nullable=false)</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT">     * @ORM\GeneratedValue(strategy="AUTO")</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="string", length=300, nullable=false)</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33"/>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="35">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="boolean", nullable=false, options={"default"=false})</token>
      </line>
      <line no="36">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isActive</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38"/>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isActive</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">email</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isActive</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isActive</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44"/>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">record</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserCreatedEvent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="47"/>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="52"/>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getEmail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">email</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="57"/>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isActive</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isActive</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="62"/>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">activate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isActive</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="67"/>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">deactivate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isActive</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="72">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="73"/>
    </source>
  </file>
</phpunit>
