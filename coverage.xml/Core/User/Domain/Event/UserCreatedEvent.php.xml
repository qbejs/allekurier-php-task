<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="UserCreatedEvent.php" path="/Core/User/Domain/Event">
    <totals>
      <lines total="22" comments="0" code="22" executable="2" executed="2" percent="100.00"/>
      <methods count="2" tested="2" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Core\User\Domain\Event\UserCreatedEvent" start="10" executable="2" executed="2" crap="2">
      <namespace name="App\Core\User\Domain\Event"/>
      <method name="__construct" signature="__construct(App\Core\User\Domain\User $user)" start="12" end="15" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getUser" signature="getUser(): App\Core\User\Domain\User" start="17" end="20" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="15">
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCreateInvoiceWithValidAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldThrowExceptionForInvalidAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldThrowExceptionForNegativeAmount"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCancelInvoice"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldSetId"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldPullEvents"/>
        <covered by="Tests\Unit\Core\Invoice\Domain\InvoiceTest::testShouldCreateInvoiceWithLargeAmount"/>
        <covered by="Tests\Unit\Core\User\Application\Command\CreateUser\CreateUserHandlerTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Application\Command\CreateUser\CreateUserHandlerTest::testShouldCreateUserWithDifferentEmail"/>
        <covered by="Tests\Unit\Core\User\Application\EventListener\SendEmailUserCreatedEventSubscriberListenerTest::testShouldSendEmailWhenUserCreated"/>
        <covered by="Tests\Unit\Core\User\Application\EventListener\SendEmailUserCreatedEventSubscriberListenerTest::testShouldSendEmailWithDifferentUser"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithInactiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldCreateUserWithActiveStatus"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldActivateUser"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldDeactivateUser"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldPullEvents"/>
        <covered by="Tests\Unit\Core\User\Domain\UserTest::testShouldSetId"/>
      </line>
      <line nr="19">
        <covered by="Tests\Unit\Core\User\Application\EventListener\SendEmailUserCreatedEventSubscriberListenerTest::testShouldSendEmailWhenUserCreated"/>
        <covered by="Tests\Unit\Core\User\Application\EventListener\SendEmailUserCreatedEventSubscriberListenerTest::testShouldSendEmailWithDifferentUser"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Core\User\Domain\Event</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Common\EventManager\EventInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Core\User\Domain\User</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserCreatedEvent</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EventInterface</token>
      </line>
      <line no="11">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">user</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="21">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="22"/>
    </source>
  </file>
</phpunit>
