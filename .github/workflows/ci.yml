name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  tests:
    name: Tests & Static Analysis
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306
      
      redis:
        image: redis:6-alpine
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_mysql, redis, xdebug
          coverage: xdebug
          tools: composer:v2

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Create .env file for tests
        run: |
          cp .env.example .env || echo "No .env.example found, creating basic .env"
          echo "APP_ENV=test" >> .env
          echo "DATABASE_URL=mysql://test_user:test_password@127.0.0.1:3306/test_db" >> .env
          echo "MESSENGER_TRANSPORT_DSN=doctrine://default" >> .env
          echo "REDIS_PASSWORD=redis123" >> .env

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Cache PHP CS Fixer
        uses: actions/cache@v3
        with:
          path: .php-cs-fixer.cache
          key: ${{ runner.os }}-php-cs-fixer-${{ hashFiles('**/.php-cs-fixer.dist.php') }}
          restore-keys: |
            ${{ runner.os }}-php-cs-fixer-

      - name: Cache PHPStan
        uses: actions/cache@v3
        with:
          path: .phpstan.cache
          key: ${{ runner.os }}-phpstan-${{ hashFiles('**/phpstan.dist.neon') }}
          restore-keys: |
            ${{ runner.os }}-phpstan-

      - name: Clear cache
        run: php bin/console cache:clear --env=test

      - name: Run PHP CS Fixer
        run: composer cs-check

      - name: Run PHPStan
        run: composer phpstan

      - name: Run Unit Tests
        run: php bin/phpunit tests/Unit/ --coverage-xml=coverage.xml --coverage-filter=src/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  security:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:v2

      - name: Create .env file
        run: |
          cp .env.example .env || echo "No .env.example found, creating basic .env"
          echo "APP_ENV=test" >> .env
          echo "DATABASE_URL=mysql://test:test@localhost:3306/test" >> .env
          echo "MESSENGER_TRANSPORT_DSN=doctrine://default" >> .env

      - name: Install dependencies
        run: composer install --prefer-dist --no-dev

#      Temporarily disabled security check to avoid issues (Symfony 6.4 compatibility)
#      - name: Run security check
#        run: composer audit

